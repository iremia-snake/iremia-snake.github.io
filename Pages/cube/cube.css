.container{
    position: absolute;
    top: calc((100vh - var(--size))/2);
    left: calc((100vw - var(--size))/2);
    --bool: 0;
    --size: 250px;
    --border: 3px;
    height: var(--size);
    width: var(--size);
    /* background-color: rgba(127, 255, 212,1); */
    transform-style: preserve-3d;
    /* transition: transform 0.7s cubic-bezier(0.075, 0.82, 0.165, 1); */
    animation: rotate infinite linear;
    animation-duration: calc(var(--bool)*20s);
}
@keyframes rotate {
    100% {
        transform: rotateY(360deg) rotateX(360deg);
    }
}
.container .side{
    box-sizing: content-box;
    position: absolute;
    width: inherit;
    height: inherit;
    opacity: 0.7;
    border: var(--border) solid rgb(255, 255, 255);
    /* background-color: #FFC160; */
    /* background-color: transparent; */
    background-image: url(https://pngimg.com/uploads/anime_girl/anime_girl_PNG6.png);
    background-image: url(https://3djungle.ru/upload/resize_cache/iblock/ee3/400_400_1/ee3c83645eb0ea7781503c4317052a89.jpg);
    image-rendering: pixelated;
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
}
.container .side::after{
    content: '\2111';
    content: "";
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    text-align: center;
    font-size: 70px;
    line-height: var(--size);
    color: rgb(255, 255, 255);
    display: block;
    width: inherit;
    height: inherit;
    background: radial-gradient(transparent,black 150%);
    
}
/* все грани надо отодвинуть от центра на половину длины грани
и повернуть на угол, соответствующий положению грани в пространстве */
.back{
    transform: translateZ(calc( (var(--size) + var(--border)*2) /-2 )) rotateY(180deg);
    background-color: rgb(255, 166, 0);
}
.front{
    transform: translateZ(calc((var(--size) + var(--border)*2)/2));
    background-color: rgb(0, 123, 255);
}
.left{
    transform: translateX(calc((var(--size) + var(--border)*2)/-2)) rotateY(-90deg);
    background-color: rgb(0, 255, 17);
}
.right{
    transform: translateX(calc((var(--size) + var(--border)*2)/2)) rotateY(90deg);
    background-color: rgb(255, 0, 0);
}
.top{
    transform: translateY(calc((var(--size) + var(--border)*2)/-2)) rotateX(90deg);
    background-color: rgb(217, 132, 246);
}
.bottom{
    transform: translateY(calc((var(--size) + var(--border)*2)/2)) rotateX(-90deg);
    background-color: rgb(0, 219, 197);
}